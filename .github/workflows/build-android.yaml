name: Build Android APK

on:
  workflow_dispatch:
    inputs:
      build_number:
        description: "Build number (optional, defaults to run number)"
        required: false
        type: string
  workflow_call:
    inputs:
      build_number:
        required: false
        type: string

jobs:
  build-android:
    name: Build APK
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"

      - name: Prepare Flutter project
        uses: ./.github/actions/flutter-prepare
        with:
          flutter_version: 3.35.4
          firebase_project: bebi-app
          firebase_token: ${{ secrets.FIREBASE_CI_TOKEN }}
          firebase_platforms: android

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            android/.gradle
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Set build number
        id: build_number
        run: |
          if [ -n "${{ inputs.build_number }}" ]; then
            echo "number=${{ inputs.build_number }}" >> $GITHUB_OUTPUT
          elif [ -n "${{ github.event.inputs.build_number }}" ]; then
            echo "number=${{ github.event.inputs.build_number }}" >> $GITHUB_OUTPUT
          else
            echo "number=${{ github.run_number }}" >> $GITHUB_OUTPUT
          fi

      - name: Create keystore and key.properties
        run: |
          echo "${{ secrets.KEYSTORE_JKS_BASE64 }}" | base64 --decode > android/app/keystore.jks
          echo "${{ secrets.KEY_PROPERTIES }}" > android/key.properties

      - name: Build Android
        run: |
          flutter build apk \
          --release \
          --obfuscate \
          --split-debug-info=build/app/outputs/symbols \
          --build-number=${{ steps.build_number.outputs.number }} \
          --split-per-abi

      - name: Upload debug symbols to Crashlytics
        run: |
          echo "Diagnostics: listing build/app/outputs"
          ls -la build/app/outputs || true
          echo "Diagnostics: listing build/app/outputs/symbols"
          ls -la build/app/outputs/symbols || true

          if [ -d build/app/outputs/symbols ] && [ "$(ls -A build/app/outputs/symbols)" ]; then
            echo "Found symbols directory and files, uploading to Crashlytics..."
            firebase crashlytics:symbols:upload \
              --app=${{ secrets.FIREBASE_ANDROID_APP_ID }} \
              build/app/outputs/symbols
          else
            echo "ERROR: No symbols found at build/app/outputs/symbols. Crashlytics upload requires symbol files."
            echo "If you expected symbols to be generated by Flutter, ensure the build uses --split-debug-info=build/app/outputs/symbols and that the build produced files."
            exit 1
          fi

      - name: Rename APK files with user-friendly names
        uses: ./.github/actions/rename-artifacts
        with:
          platform: android

      - name: Upload Android build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-artifacts
          path: build/app/outputs/flutter-apk/*.apk
