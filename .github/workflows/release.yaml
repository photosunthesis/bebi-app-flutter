name: Create release
on:
  workflow_dispatch:
    inputs:
      build_android:
        description: "Build Android APK"
        required: true
        default: true
        type: boolean
      build_ios:
        description: "Build iOS IPA"
        required: true
        default: true
        type: boolean
  push:
    tags:
      - "*"

jobs:
  build-android:
    name: Build APK
    if: ${{ github.event.inputs.build_android == 'true' || github.event_name != 'workflow_dispatch' }}
    uses: ./.github/workflows/build-android.yaml
    with:
      build_number: ${{ github.run_number }}
    secrets: inherit

  build-ios:
    name: Build IPA
    if: ${{ github.event.inputs.build_ios == 'true' || github.event_name != 'workflow_dispatch' }}
    uses: ./.github/workflows/build-ios.yaml
    with:
      build_number: ${{ github.run_number }}
    secrets: inherit

  build-and-deploy-web:
    name: Build And Deploy Web
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    uses: ./.github/workflows/build-and-deploy-web.yaml
    with:
      build_number: ${{ github.run_number }}
      channel_id: live
      project_id: awesome-period-tracker
    secrets: inherit

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build-android, build-ios, build-and-deploy-web]
    if: |
      always() &&
      (needs.build-android.result == 'success' || needs.build-android.result == 'skipped') &&
      (needs.build-ios.result == 'success' || needs.build-ios.result == 'skipped')
    permissions:
      contents: write
      packages: write
      actions: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v4
        continue-on-error: true

      - name: Read latest version from CHANGELOG
        id: changelog
        shell: bash
        run: |
          LATEST_VERSION=$(grep -m1 "^## \[" CHANGELOG.md | sed -E 's/## \[(.*)\].*/\1/')
          if [ -z "$LATEST_VERSION" ]; then
            echo "No version found in CHANGELOG.md"
            exit 1
          fi

          # Extract content between the current and the next version or until the end of the file
          CHANGELOG_CONTENT=$(awk "/^## \[$LATEST_VERSION\]/ {flag=1} /^## \[/ && flag && !/^## \[$LATEST_VERSION\]/ {flag=0} flag {print}" CHANGELOG.md)

          if [ -z "$CHANGELOG_CONTENT" ]; then
            echo "No changelog content found for version $LATEST_VERSION"
            exit 1
          fi

          echo "version=$LATEST_VERSION" >> $GITHUB_OUTPUT
          echo 'content<<EOF' >> $GITHUB_OUTPUT
          echo "$CHANGELOG_CONTENT" >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

      - name: Determine artifacts to upload
        id: set_artifacts
        shell: bash
        run: |
          ARTIFACTS=""
          if [[ "${{ github.event.inputs.build_android }}" == "true" || "${{ github.event_name }}" != "workflow_dispatch" ]]; then
            ARTIFACTS+="android-artifacts/*.apk"
          fi
          if [[ "${{ github.event.inputs.build_ios }}" == "true" || "${{ github.event_name }}" != "workflow_dispatch" ]]; then
            if [[ -n "$ARTIFACTS" ]]; then
              ARTIFACTS+=",ios-artifacts/*.ipa"
            else
              ARTIFACTS+="ios-artifacts/*.ipa"
            fi
          fi
          echo "artifacts=$ARTIFACTS" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: ncipollo/release-action@v1.14.0
        with:
          prerelease: false
          tag: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: ${{ steps.set_artifacts.outputs.artifacts }}
          body: |
            ${{ steps.changelog.outputs.content }}

            ### Download Guide

            **For Android users:**
            - **android_modern_devices.apk** - Recommended for most Android phones (2017 and newer)
            - **android_older_devices.apk** - For older Android devices (2010-2017)
            - **android_emulator.apk** - For Android emulators and testing

            **For iOS users:**
            - **ios.ipa** - For iOS devices (requires sideloading with developer account and Xcode)

            > [!TIP]
            > Most users should download the "modern-devices" APK for Android.
